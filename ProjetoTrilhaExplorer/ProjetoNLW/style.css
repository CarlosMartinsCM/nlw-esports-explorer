/*Resete dos espaços inseridos pelo navegador*/
/*Resete CSS*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

}

ul {
    list-style: none;
    /*Retira os pontos marcadores das listas*/
}

body {
    background-image: url(./assets/bg.jpg);
    /**Imagem de fundo, função que recebe o local da imagem**/
    background-position: top center;
    /**Posicionamento de imagem, centralizada**/
    background-size: 100% auto;
    /**Ajuste de tamanho de imagem**/
    background-repeat: no-repeat;
    /**Não repete as imagens **/
    background-color: #121214;
    /** Cor de fundo exadecimal**/
}

body * {
    font-family: 'Inter', sans-serif;
    /*Adiciona a fonte carregada*/
    line-height: 160%;
    /*Altura da linha*/
}

header {
    margin-top: 32px;
    /* text-align: center; Alinhamento central de elementos com propriedade de texto NÃO FUNCIONA COM DIVS */
    height: calc(120px + 32px); /*Ajuste da animation*/
}

header div{
    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%); /*Cor de fundo, efeito */
    width: 120px;
    margin: auto;

    border-radius: 50%;

    display: flex; /*Alinhamento dos elementos*/
    padding: 4px;

    transition: transform 0.3s; /*Recebe a função de transição, e suavisa a transição em .03s*/
}

/*Efeito quando passado mouse emcima*/
header div:hover{
    transform: scale(1.1); /*Escala de transição de 1.1*/

}

header div img{
    width: 100%; /* 100% da imagem*/
    border-radius: 50%;

}


/** main* asterisco seletor, seleciona tudo dentro do main**/
main * {
   /** border: 1px solid red;
    /**Insere uma borda em todos os elementos do HTML**/

}

main {
    max-width: 580px;
    /**Largura maxima **/
    width: 90%;
    /**Caso a tela seja menor, ocupa 90% da tela*/
    margin: 32px auto; /*Margem de 32px encima e embaixo, e auto nas laterais*/


    /* display: flex; 
    flex-direction: column; alinha os elementos como coluna  */
    
    display: grid; /*Alternativa aos comandos acima, mesmo resultado */
    gap: 24px;
}

section {
    color: white;

    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%); /*Cor de fundo, efeito */
    padding-top: 4px;
    border-radius: 10px;
}

section div {
    background-color: #2A2634;
    padding: 32px;
    padding-top: 24px;
    border-radius: 8px;
}

section h2 {
    letter-spacing: -0.47px;
}

section p{
    letter-spacing: 0.18px;
    color: #A1A1AA;
}

section ul {
    /* Displsy diz respeito a visualização das caixas do html*/
    display: flex; /* Modifica o alinhamento dos elementos dentro da caixa ul, no caso os li's, as listas*/
    gap: 16px; /* Só funciona dentro do display flex, ou seja, com elementos lado a lado*/

    flex-wrap: wrap; /* Gera colunas atomaticamente conforme se carrega mais elementos, delimitado pelo limite da caixa */

    margin-top: 24px;
}

section ul li{
    transition: transform 0.3s;
}

section ul li:hover{
    transform: scale(1.1);
}

/*Classe games-list*/
.games-list img{
    width: 90px;
    border-radius: 8px;
}

.channel-list img{
    border-radius: 50%;
    width: 70px;
    border: 1px solid #443E54;
}

/*  Animação  */

header div{
    /*backwards inicia as propriedades de animação imediatamente*/
    animation: fromTop .7s .2s backwards; /*Segunda propriedade diz respeito ao delay */

}

main section{
    animation: fromBottom .7s backwards; /*Traz a animação previamente*/
}

/*Seleciona os "filhos" neste caso pega o filho 1*/
main section:nth-child(1){
    animation-delay: 0;
}

main section:nth-child(2){
    animation-delay: .4s;
}

main section:nth-child(3){
    animation-delay: .8s;
}

/*Função que inicia a animação, define um nome para animação, 
    indica onde começa e onde termina
    */
@keyframes fromTop{
    from {
        opacity: 0;
        transform: translateY(-30px);
    }

    to {
        opacity: 1;
        transform: translateY(0); /*Eixo Y, move até Zero, que o lugar onde já está*/
    }
}


/*Animação dos  cartões de baixo pra cima*/
@keyframes fromBottom{
    from {
        opacity: 0;
        transform: translateY(30px); /*Joga 30px pra baixo depois sobe*/
    }

    to {
        opacity: 1;
        transform: translateY(0); /*Eixo Y, move até Zero, que o lugar onde já está*/
    }
}


/* 

* Mesmo exemplo usando eixo X da esquerda para direita
@keyframes fromBottom{
    from {
        opacity: 0;
        transform: translateX(-30px); 

    to {
        opacity: 1;
        transform: translateY(0);
} */